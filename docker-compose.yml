version: '3'
services:
  mongo:
    image: mongo
    volumes:
      - mongoData:/data/db
    ports:
      - "${VUE_APP_MONGO_PORT}:27017"
    restart: on-failure
  rdf4j:
    image: tibblue/tese-rdf4j:latest
    build:
      context: ./rdf4j
      dockerfile: Dockerfile
      args:
        RDF4J_DATA: /root/.RDF4J
        VUE_APP_RDF4J_PORT: 8080
    environment:
      RDF4J_DATA: ${RDF4J_DATA}
      VUE_APP_RDF4J_PORT: ${VUE_APP_RDF4J_PORT}
    ports:
      - "${VUE_APP_RDF4J_PORT}:8080"
    restart: on-failure
  backend:
    image: tibblue/tese-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        VUE_APP_RDF4J_PORT: 8080
        VUE_APP_MONGO_PORT: 27017
        VUE_APP_BACKEND_PORT: 5000
        VUE_APP_FRONTEND_PORT: 8000
    environment:
      VUE_APP_RDF4J_PORT: ${VUE_APP_RDF4J_PORT}
      VUE_APP_MONGO_PORT: ${VUE_APP_MONGO_PORT}
      VUE_APP_BACKEND_PORT: ${VUE_APP_BACKEND_PORT}
      VUE_APP_FRONTEND_PORT: ${VUE_APP_FRONTEND_PORT}
    ports:
      - "${VUE_APP_BACKEND_PORT}:5000"
    links:
      - mongo
      - rdf4j
    restart: on-failure
  frontend:
    image: tibblue/tese-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VUE_APP_BACKEND_PORT: 5000
        VUE_APP_FRONTEND_PORT: 8000
    environment:
      VUE_APP_BACKEND_PORT: ${VUE_APP_BACKEND_PORT}
      VUE_APP_FRONTEND_PORT: ${VUE_APP_FRONTEND_PORT}
    ports:
      - "${VUE_APP_FRONTEND_PORT}:8000"
    links:
      - backend
    restart: on-failure
volumes:
  mongoData:
