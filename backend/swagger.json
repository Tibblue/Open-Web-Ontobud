{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "OntoWorks Application API",
    "description": "OntoWorks Backend Application API documentation",
    "contact": {
      "name": "Francisco Oliveira",
      "email": "a78416@alunos.uminho.pt"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://epl.di.uminho.pt:8001/api",
      "description": "Main server"
    },
    {
      "url": "http://localhost:5000/api",
      "description": "Testing server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Requests related to User Authentication"
    },
    {
      "name": "RDF4J",
      "description": "Requests related to RDF4J Server"
    },
    {
      "name": "Mongo",
      "description": "Requests related to MongoDB"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create new user account",
        "description": "Create new user account.",
        "requestBody": {
          "description": "User account details.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New user is created, and returns JSON user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Creation failed. Likely duplicate key (already used email)"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with user account",
        "description": "Login with user account.\nReturns JWT token to be used as authorization for some requests and User name and email.\n",
        "requestBody": {
          "description": "Login credentials.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT access token and User info. JWT will be required in some requests for Authorization."
          },
          "404": {
            "description": "Login failed. Likely wrong email ou password."
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user info from JWT",
        "description": "Decrypts JWT payload, returning some user account information.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Information returned."
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/delete/{email}": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete user account by email",
        "description": "Delete user account with the specified email.\nOnly the user himself or a admin can delete a account.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "email",
            "description": "Account email to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rdf4j/management/listRepos": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "List Repositories",
        "description": "Returns all existing repositories.",
        "responses": {
          "200": {
            "description": "Request success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "readable": {
                        "type": "object",
                        "properties": {
                          "datatype": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "title": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "uri": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "writable": {
                        "type": "object",
                        "properties": {
                          "datatype": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/management/create": {
      "post": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Create a new Repository",
        "description": "Create a new Repository.\nCreating a repository with a Repository ID that already exists will overwrite the old one,\nlikely resulting is data loss.\n",
        "requestBody": {
          "description": "Login credentials.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "memory",
                      "memory-rdfs-dt",
                      "native",
                      "native-rdfs-dt"
                    ],
                    "default": "memory"
                  },
                  "Repository ID": {
                    "type": "string"
                  },
                  "Repository title": {
                    "type": "string"
                  }
                },
                "example": {
                  "type": "memory-rdfs-dt",
                  "Repository ID": "test",
                  "Repository title": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create success"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "TODO (already existing repo ID)"
          }
        }
      }
    },
    "/rdf4j/management/delete/{repository}": {
      "delete": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Delete a Repository",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string",
              "example": "test"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          }
        }
      }
    },
    "/rdf4j/management/delete/{repository}/statements": {
      "delete": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Clear all Repository statements/triples",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string",
              "example": "test"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clear success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          }
        }
      }
    },
    "/rdf4j/management/importFile/{repository}": {
      "post": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Import file into a repository (add triples)",
        "description": "Import file into a repository.\nThe statements/triples will be **added** to the already existing in the repository.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+xml": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/rdf+n3": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/x-nquads": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/trix": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-trig": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-binary-rdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          },
          "default": {
            "description": "TODO"
          }
        }
      },
      "put": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Import file into a repository (replace triples)",
        "description": "Import file into a repository.\n**WARNING** The new statements/triples will **replace** the already existing in the repository.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+xml": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/rdf+n3": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/x-nquads": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/trix": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-trig": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-binary-rdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          },
          "default": {
            "description": "TODO"
          }
        }
      }
    },
    "/rdf4j/management/importText/{repository}": {
      "post": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Import text into a repository (add triples)",
        "description": "Import text into a repository.\nThe statements/triples will be **added** to the already existing in the repository.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+xml": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/rdf+n3": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/x-nquads": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/trix": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-trig": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-binary-rdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          },
          "default": {
            "description": "TODO"
          }
        }
      },
      "put": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Import text into a repository (replace triples)",
        "description": "Import text into a repository.\n**WARNING** The new statements/triples will **replace** the already existing in the repository.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-turtle": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+xml": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/rdf+n3": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "text/x-nquads": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/rdf+json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/trix": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-trig": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-binary-rdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import success"
          },
          "400": {
            "description": "Bad request (or the repository does not exist)"
          },
          "default": {
            "description": "TODO"
          }
        }
      }
    },
    "/rdf4j/management/export/{repository}": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Export repository",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "infer",
            "description": "Returns infered triples?",
            "schema": {
              "type": "boolean",
              "example": "true",
              "default": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export success",
            "content": {
              "text/turtle": {
                "schema": {
                  "type": "string",
                  "example": "@prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\n<http://www.semanticweb.org/kiko/fam> a owl:Ontology .\n\n:filho_de a owl:ObjectProperty;\n  owl:inverseOf :pai_de .\n\n:pai_de a owl:ObjectProperty;\n  rdfs:domain :pai;\n  rdfs:range :filho .\n\n:filho a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pai a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pessoa a owl:Class .\n\n:carlos a owl:NamedIndividual ;\n  :filho_de :antonio .\n\n:antonio a owl:NamedIndividual;\n  :pai_de :carlos .\n"
                }
              },
              "application/x-turtle": {
                "schema": {
                  "type": "string",
                  "example": "@prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\n<http://www.semanticweb.org/kiko/fam> a owl:Ontology .\n\n:filho_de a owl:ObjectProperty;\n  owl:inverseOf :pai_de .\n\n:pai_de a owl:ObjectProperty;\n  rdfs:domain :pai;\n  rdfs:range :filho .\n\n:filho a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pai a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pessoa a owl:Class .\n\n:carlos a owl:NamedIndividual ;\n  :filho_de :antonio .\n\n:antonio a owl:NamedIndividual;\n  :pai_de :carlos .\n"
                }
              },
              "application/rdf-xml": {
                "schema": {
                  "type": "string",
                  "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF xmlns=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#\"\n  xmlns:owl=\"http://www.w3.org/2002/07/owl#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n  xmlns:xml=\"http://www.w3.org/XML/1998/namespace\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"\n  xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\">\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/fam\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#Ontology\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#ObjectProperty\" />\n    <owl:inverseOf rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#ObjectProperty\" />\n    <rdfs:domain rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\" />\n    <rdfs:range rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#Class\" />\n    <rdfs:subClassOf rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#Class\" />\n    <rdfs:subClassOf rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#Class\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#NamedIndividual\" />\n    <pai_de rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\" />\n  </rdf:Description>\n\n  <rdf:Description rdf:about=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\">\n    <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#NamedIndividual\" />\n    <filho_de rdf:resource=\"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\" />\n  </rdf:Description>\n</rdf:RDF>\n"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> .\n<http://www.semanticweb.org/kiko/fam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> .\n"
                }
              },
              "text/rdf+n3": {
                "schema": {
                  "type": "string",
                  "example": "@prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix xml: <http://www.w3.org/XML/1998/namespace> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\n:filho a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pai a owl:Class;\n  rdfs:subClassOf :pessoa .\n\n:pessoa a owl:Class .\n\n:antonio a owl:NamedIndividual;\n  :pai_de :carlos .\n\n:carlos a owl:NamedIndividual;\n  :filho_de :antonio .\n\n<http://www.semanticweb.org/kiko/fam> a owl:Ontology .\n\n:filho_de a owl:ObjectProperty;\n  owl:inverseOf :pai_de .\n\n:pai_de a owl:ObjectProperty;\n  rdfs:domain :pai;\n  rdfs:range :filho .\n"
                }
              },
              "text/x-nquads": {
                "schema": {
                  "type": "string",
                  "example": "<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> .\n<http://www.semanticweb.org/kiko/fam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> .\n<http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> .\n"
                }
              },
              "application/ld+json": {
                "schema": {
                  "type": "string",
                  "example": "[\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/fam\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#Ontology\"\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#NamedIndividual\"\n        ],\n        \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#NamedIndividual\"\n        ],\n        \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#Class\"\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#ObjectProperty\"\n        ],\n        \"http://www.w3.org/2002/07/owl#inverseOf\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#Class\"\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#ObjectProperty\"\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\"\n            }\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#range\": [\n            {\n                \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\",\n        \"@type\": [\n            \"http://www.w3.org/2002/07/owl#Class\"\n        ]\n    }\n]\n"
                }
              },
              "application/rdf+json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"http://www.semanticweb.org/kiko/fam\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#Ontology\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\": {\n        \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#NamedIndividual\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos\": {\n        \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#NamedIndividual\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#Class\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#ObjectProperty\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/2002/07/owl#inverseOf\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#Class\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#ObjectProperty\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai\",\n                \"type\": \"uri\"\n            }\n        ],\n        \"http://www.w3.org/2000/01/rdf-schema#range\": [\n            {\n                \"value\": \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho\",\n                \"type\": \"uri\"\n            }\n        ]\n    },\n    \"http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa\": {\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            {\n                \"value\": \"http://www.w3.org/2002/07/owl#Class\",\n                \"type\": \"uri\"\n            }\n        ]\n    }\n}\n"
                }
              },
              "application/trix": {
                "schema": {
                  "type": "string",
                  "example": "<?xml version='1.0' encoding='UTF-8'?>\n<TriX xmlns='http://www.w3.org/2004/03/trix/trix-1/'>\n  <graph>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#Class</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>\n      <uri>http://www.w3.org/2000/01/rdf-schema#subClassOf</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#Class</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>\n      <uri>http://www.w3.org/2000/01/rdf-schema#subClassOf</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#Class</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#NamedIndividual</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#NamedIndividual</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/fam</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#Ontology</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#ObjectProperty</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>\n      <uri>http://www.w3.org/2002/07/owl#inverseOf</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>\n      <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>\n      <uri>http://www.w3.org/2002/07/owl#ObjectProperty</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>\n      <uri>http://www.w3.org/2000/01/rdf-schema#domain</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>\n    </triple>\n    <triple>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>\n      <uri>http://www.w3.org/2000/01/rdf-schema#range</uri>\n      <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>\n    </triple>\n  </graph>\n</TriX>\n"
                }
              },
              "application/x-trig": {
                "schema": {
                  "type": "string",
                  "example": "@prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix xml: <http://www.w3.org/XML/1998/namespace> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\n{\n  :filho a owl:Class;\n    rdfs:subClassOf :pessoa .\n\n  :pai a owl:Class;\n    rdfs:subClassOf :pessoa .\n\n  :pessoa a owl:Class .\n\n  :antonio a owl:NamedIndividual;\n    :pai_de :carlos .\n\n  :carlos a owl:NamedIndividual;\n    :filho_de :antonio .\n\n  <http://www.semanticweb.org/kiko/fam> a owl:Ontology .\n\n  :filho_de a owl:ObjectProperty;\n    owl:inverseOf :pai_de .\n\n  :pai_de a owl:ObjectProperty;\n    rdfs:domain :pai;\n    rdfs:range :filho .\n}\n"
                }
              },
              "application/x-binary-rdf": {
                "schema": {
                  "description": "Binary value"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/explicit": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Explicit triples count",
        "description": "Returns the number of explicit triples in the repository.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/total": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "deprecated": true,
        "summary": "Total triples count",
        "description": "Returns the total (explicit+implicit) number of triples in the repository.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/triples": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Explicit and Implicit triples count and Expansion ratio",
        "description": "Returns the number of explicit and implicit triples in the repository and the expansion ratio.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/namespaces": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Repository Namespaces",
        "description": "Returns the repository namespaces.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/namespaces/{prefix}": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Returns the namespace for a prefix in a repository",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "prefix",
            "description": "Target Prefix (can be a space to simulate noname prefix)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/repository/{repository}/contexts": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Repository contexts",
        "description": "Returns the repository contexts.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Target Repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/rdf4j/query/{repository}": {
      "get": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Query a Repository",
        "description": "Run a SPARQL query in a Repository.\nBecause it is a GET request the query size is limited. Use the POST if needed.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Repository to be queried",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "query",
            "description": "SPARQL query to run",
            "schema": {
              "type": "string",
              "example": "select * where { ?s ?p ?o } limit 20"
            }
          },
          {
            "in": "query",
            "name": "infer",
            "description": "Returns infered triples? (default true)",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "tags": [
          "RDF4J"
        ],
        "summary": "Query a Repository",
        "description": "Run a SPARQL query in a Repository.\n",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "repository",
            "description": "Repository to be queried",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "SPARQL query to run"
                  },
                  "infer": {
                    "type": "string",
                    "description": "Returns infered triples? (default true)"
                  }
                },
                "required": [
                  "query"
                ],
                "example": {
                  "query": "select * where { ?s ?p ?o } limit 20",
                  "infer": "true"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/mongo": {
      "get": {
        "tags": [
          "Mongo"
        ],
        "deprecated": true,
        "summary": "TODO",
        "description": "TODO",
        "responses": {
          "default": {
            "description": "TODO"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Mongo"
        ],
        "summary": "Users list",
        "description": "Returns a JSON list with all the users.",
        "responses": {
          "200": {
            "description": "Operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "Mongo"
        ],
        "summary": "Create a new user element",
        "requestBody": {
          "description": "User account details.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created with success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Internal error. Likely duplicate key (email already exists)"
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": [
          "Mongo"
        ],
        "summary": "User information by email",
        "description": "Given a User email, returns the User information",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "email",
            "description": "User email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful. (or user doesnt exist and returns empty object...)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Mongo"
        ],
        "summary": "Delete user by email",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "email",
            "description": "Email from the User to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted with success. (or it doesnt exist and returns empty object)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/{email}/password": {
      "put": {
        "tags": [
          "Mongo"
        ],
        "deprecated": true,
        "summary": "TODO",
        "description": "TODO",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "email",
            "description": "Account email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "TODO"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "5da988f5204a53011f3b3e49"
          },
          "name": {
            "type": "string",
            "example": "test"
          },
          "email": {
            "type": "string",
            "uniqueItems": true,
            "example": "test@email"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$7SVjTqc7BGf8/P83WN5CPOYlBcKzEIdfSbhEEl3vbpARswHccGtke"
          },
          "__v": {
            "type": "number",
            "example": 0
          }
        }
      },
      "Repository": {
        "required": [
          "id",
          "name",
          "owner_email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "owner_email": {
            "type": "string"
          }
        }
      },
      "SavedQuery": {
        "required": [
          "user_email",
          "name",
          "query"
        ],
        "properties": {
          "user_email": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "query": {
            "type": "string"
          },
          "repoID": {
            "type": "string"
          }
        }
      }
    }
  }
}