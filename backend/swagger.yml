---
openapi: '3.0.0'
info:
  version: 1.0.0
  title: OntoWorks Application API
  description: OntoWorks Backend Application API documentation
  contact:
    name: Francisco Oliveira
    email: a78416@alunos.uminho.pt
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://epl.di.uminho.pt:8001/api
    description: Main server
  - url: http://localhost:5000/api
    description: Testing server

tags:
- name: Auth
  description: Requests related to User Authentication
- name: RDF4J
  description: Requests related to RDF4J Server
- name: Mongo
  description: Requests related to MongoDB
paths:
  "/auth/signup":
    post:
      tags:
      - Auth
      summary: Create new user account
      description: Create new user account.
      requestBody:
        description: User account details.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: New user is created, and returns JSON user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Creation failed. Likely duplicate key (already used email)
  "/auth/login":
    post:
      tags:
      - Auth
      summary: Login with user account
      description: |
        Login with user account.
        Returns JWT token to be used as authorization for some requests and User name and email.
      requestBody:
        description: Login credentials.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
              # example:
              #   email: "kiko"
              #   password: "kiko"
      responses:
        '200':
          description: JWT access token and User info. JWT will be required in some requests for Authorization.
        '404':
          description: Login failed. Likely wrong email ou password.
  "/auth/user":
    get:
      tags:
      - Auth
      summary: Get user info from JWT
      description: |
        Decrypts JWT payload, returning some user account information.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Information returned.
        '401':
          description: Unauthorized
  "/auth/delete/{email}":
    delete:
      tags:
      - Auth
      summary: Delete user account by email
      description: |
        Delete user account with the specified email.
        Only the user himself or a admin can delete a account.
      security:
        - bearerAuth: []
      parameters:
      - in: path
        required: true
        name: email
        description: Account email to delete
        schema:
          type: string
      responses:
        '200':
          description: Account deleted
        '401':
          description: Unauthorized
        # default:
        #   description: Email doesn't exist

  # RDF4J SECTION
  # "/rdf4j":
  #   get:
  #     tags:
  #     - RDF4J
  #     deprecated: true
  #     summary: TODO
  #     description: TODO
  #     responses:
  #       default:
  #         description: TODO
  "/rdf4j/management/listRepos":
    get:
      tags:
      - RDF4J
      summary: List Repositories
      description: Returns all existing repositories.
      responses:
        '200':
          description: Request success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    readable:
                      type: object
                      properties:
                        datatype:
                          type: string
                        type:
                          type: string
                        value:
                          type: boolean
                    id:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: boolean
                    title:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: boolean
                    uri:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: boolean
                    writable:
                      type: object
                      properties:
                        datatype:
                          type: string
                        type:
                          type: string
                        value:
                          type: boolean
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request.
        '406':
          description: Invalid accept type.
  "/rdf4j/management/repoInfo/{repository}":
    get:
      tags:
      - RDF4J
      summary: Repository configuration
      # description: Repository configuration
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
          content:
            text/turtle:
              schema:
                type: string
            application/x-turtle:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            text/rdf+n3:
              schema:
                type: string
            text/x-nquads:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            application/rdf+json:
              schema:
                type: string
            application/trix:
              schema:
                type: string
            application/x-trig:
              schema:
                type: string
            application/x-binary-rdf:
              schema:
                type: string
        '400':
          description: Bad request.
        '404':
          description: Unknown Repository. Repository does not exist.
        '406':
          description: Invalid accept type.
  "/rdf4j/management/create":
    put:
      tags:
      - RDF4J
      summary: Create a new Repository
      # description: Create a new Repository.
      requestBody:
        description: Configuration values.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ["native", "native-rdfs-dt", "memory", "memory-rdfs-dt"]
                  default: native
                Repository ID:
                  type: string
                Repository Title:
                  type: string
                Persist:
                  type: boolean
                  default: true
                # Sync Delay:
                #   type: number
              required:
                - type
                - Repository ID
                - Repository Title
      responses:
        '200':
          description: Create success.
        '400':
          description: Bad request.
        '409':
          description: Repository already exists.
        '500':
          description: Internal Error. Likely configuration error. Possibly bad configuration values.
  "/rdf4j/management/update":
    post:
      tags:
      - RDF4J
      deprecated: true
      summary: Update existing Repository
      # description: Update existing Repository.
      requestBody:
        description: |
          New configuration values. Only 'Repository ID' cannot be changed. Any other given
          configuration will replace the previous. **NOTE** if the new configuration is not
          compatible with the previous **information can be lost**.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ["native", "native-rdfs-dt", "memory", "memory-rdfs-dt"]
                  default: native
                Repository ID:
                  type: string
                Repository Title:
                  type: string
                Persist:
                  type: boolean
                  default: true
                # Sync Delay:
                #   type: number
              required:
                - Repository ID
      responses:
        '200':
          description: Create success.
        '400':
          description: Bad request.
        '404':
          description: Unknown Repository. Repository does not exist.
        '500':
          description: Internal Error. Likely configuration error. Possibly bad configuration values.
  "/rdf4j/management/delete/{repository}":
    delete:
      tags:
      - RDF4J
      summary: Delete a Repository
      # description: Delete a Repository
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Delete success.
        '400':
          description: Bad request.
        '404':
          description: Unknown Repository. Repository does not exist.
  "/rdf4j/management/delete/{repository}/statements":
    delete:
      tags:
      - RDF4J
      summary: Clear all Repository statements/triples
      # description: Clear all Repository statements/triples
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Clear success.
        '400':
          description: Bad request.
        '404':
          description: Unknown Repository. Repository does not exist.
  "/rdf4j/management/importFile/{repository}":
    post:
      tags:
      - RDF4J
      # deprecated: true
      summary: Import file into a repository (add triples)
      description: |
        Import file into a repository.
        The statements/triples will be **added** to the already existing in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      requestBody:
        content:
            # Format      MIME type
            # RDF/XML     application/rdf+xml
            # N-Triples    text/plain
            # Turtle      text/turtle
            # N3          text/rdf+n3
            # N-Quads     text/x-nquads
            # JSON-LD     application/ld+json
            # RDF/JSON    application/rdf+json
            # TriX        application/trix
            # TriG        application/x-trig
            # Rdf4j Binary RDF  application/x-binary-rdf
          text/turtle:
            schema:
              type: string
              format: binary
          application/x-turtle:
            schema:
              type: string
              format: binary
          application/rdf+xml:
            schema:
              type: string
              format: binary
          text/plain:
            schema:
              type: string
              format: binary
          text/rdf+n3:
            schema:
              type: string
              format: binary
          text/x-nquads:
            schema:
              type: string
              format: binary
          application/ld+json:
            schema:
              type: string
              format: binary
          application/rdf+json:
            schema:
              type: string
              format: binary
          application/trix:
            schema:
              type: string
              format: binary
          application/x-trig:
            schema:
              type: string
              format: binary
          application/x-binary-rdf:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Import success
        '400':
          description: Bad request (or the repository does not exist)
        default:
          description: TODO
    put:
      tags:
      - RDF4J
      # deprecated: true
      summary: Import file into a repository (replace triples)
      description: |
        Import file into a repository.
        **WARNING** The new statements/triples will **replace** the already existing in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      requestBody:
        content:
            # Format      MIME type
            # RDF/XML     application/rdf+xml
            # N-Triples    text/plain
            # Turtle      text/turtle
            # N3          text/rdf+n3
            # N-Quads     text/x-nquads
            # JSON-LD     application/ld+json
            # RDF/JSON    application/rdf+json
            # TriX        application/trix
            # TriG        application/x-trig
            # Rdf4j Binary RDF  application/x-binary-rdf
          text/turtle:
            schema:
              type: string
              format: binary
          application/x-turtle:
            schema:
              type: string
              format: binary
          application/rdf+xml:
            schema:
              type: string
              format: binary
          text/plain:
            schema:
              type: string
              format: binary
          text/rdf+n3:
            schema:
              type: string
              format: binary
          text/x-nquads:
            schema:
              type: string
              format: binary
          application/ld+json:
            schema:
              type: string
              format: binary
          application/rdf+json:
            schema:
              type: string
              format: binary
          application/trix:
            schema:
              type: string
              format: binary
          application/x-trig:
            schema:
              type: string
              format: binary
          application/x-binary-rdf:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Import success
        '400':
          description: Bad request (or the repository does not exist)
        default:
          description: TODO
  "/rdf4j/management/importText/{repository}":
    post:
      tags:
      - RDF4J
      # deprecated: true
      summary: Import text into a repository (add triples)
      description: |
        Import text into a repository.
        The statements/triples will be **added** to the already existing in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      requestBody:
        content:
            # Format      MIME type
            # RDF/XML     application/rdf+xml
            # N-Triples    text/plain
            # Turtle      text/turtle
            # N3          text/rdf+n3
            # N-Quads     text/x-nquads
            # JSON-LD     application/ld+json
            # RDF/JSON    application/rdf+json
            # TriX        application/trix
            # TriG        application/x-trig
            # Rdf4j Binary RDF  application/x-binary-rdf
          text/turtle:
            schema:
              type: string
          application/x-turtle:
            schema:
              type: string
          application/rdf+xml:
            schema:
              type: string
          text/plain:
            schema:
              type: string
          text/rdf+n3:
            schema:
              type: string
          text/x-nquads:
            schema:
              type: string
          application/ld+json:
            schema:
              type: string
          application/rdf+json:
            schema:
              type: string
          application/trix:
            schema:
              type: string
          application/x-trig:
            schema:
              type: string
          application/x-binary-rdf:
            schema:
              type: string
      responses:
        '200':
          description: Import success
        '400':
          description: Bad request (or the repository does not exist)
        default:
          description: TODO
    put:
      tags:
      - RDF4J
      # deprecated: true
      summary: Import text into a repository (replace triples)
      description: |
        Import text into a repository.
        **WARNING** The new statements/triples will **replace** the already existing in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      requestBody:
        content:
            # Format      MIME type
            # RDF/XML     application/rdf+xml
            # N-Triples    text/plain
            # Turtle      text/turtle
            # N3          text/rdf+n3
            # N-Quads     text/x-nquads
            # JSON-LD     application/ld+json
            # RDF/JSON    application/rdf+json
            # TriX        application/trix
            # TriG        application/x-trig
            # Rdf4j Binary RDF  application/x-binary-rdf
          text/turtle:
            schema:
              type: string
          application/x-turtle:
            schema:
              type: string
          application/rdf+xml:
            schema:
              type: string
          text/plain:
            schema:
              type: string
          text/rdf+n3:
            schema:
              type: string
          text/x-nquads:
            schema:
              type: string
          application/ld+json:
            schema:
              type: string
          application/rdf+json:
            schema:
              type: string
          application/trix:
            schema:
              type: string
          application/x-trig:
            schema:
              type: string
          application/x-binary-rdf:
            schema:
              type: string
      responses:
        '200':
          description: Import success
        '400':
          description: Bad request (or the repository does not exist)
        default:
          description: TODO
  "/rdf4j/management/export/{repository}":
    get:
      tags:
      - RDF4J
      summary: Export repository
      # description: Export repository
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      - in: query
        name: infer
        description: Returns infered triples?
        schema:
          type: boolean
          example: "true"
          default: "true"
      responses:
        '200':
          description: Export success
          content:
            # Format      MIME type
            # RDF/XML     application/rdf+xml
            # N-Triples    text/plain
            # Turtle      text/turtle
            # N3          text/rdf+n3
            # N-Quads     text/x-nquads
            # JSON-LD     application/ld+json
            # RDF/JSON    application/rdf+json
            # TriX        application/trix
            # TriG        application/x-trig
            # Rdf4j Binary RDF  application/x-binary-rdf
            text/turtle:
              schema:
                type: string
                example: |
                  @prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .
                  @prefix owl: <http://www.w3.org/2002/07/owl#> .
                  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

                  <http://www.semanticweb.org/kiko/fam> a owl:Ontology .

                  :filho_de a owl:ObjectProperty;
                    owl:inverseOf :pai_de .

                  :pai_de a owl:ObjectProperty;
                    rdfs:domain :pai;
                    rdfs:range :filho .

                  :filho a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pai a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pessoa a owl:Class .

                  :carlos a owl:NamedIndividual ;
                    :filho_de :antonio .

                  :antonio a owl:NamedIndividual;
                    :pai_de :carlos .
            application/x-turtle:
              schema:
                type: string
                example: |
                  @prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .
                  @prefix owl: <http://www.w3.org/2002/07/owl#> .
                  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

                  <http://www.semanticweb.org/kiko/fam> a owl:Ontology .

                  :filho_de a owl:ObjectProperty;
                    owl:inverseOf :pai_de .

                  :pai_de a owl:ObjectProperty;
                    rdfs:domain :pai;
                    rdfs:range :filho .

                  :filho a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pai a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pessoa a owl:Class .

                  :carlos a owl:NamedIndividual ;
                    :filho_de :antonio .

                  :antonio a owl:NamedIndividual;
                    :pai_de :carlos .
            application/rdf-xml:
              schema:
                type: string
                example: |
                  <?xml version="1.0" encoding="UTF-8"?>
                  <rdf:RDF xmlns="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#"
                    xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                    xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
                    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/fam">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Ontology" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty" />
                      <owl:inverseOf rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty" />
                      <rdfs:domain rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai" />
                      <rdfs:range rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class" />
                      <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class" />
                      <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual" />
                      <pai_de rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos" />
                    </rdf:Description>

                    <rdf:Description rdf:about="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos">
                      <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual" />
                      <filho_de rdf:resource="http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio" />
                    </rdf:Description>
                  </rdf:RDF>

            text/plain:
              schema:
                type: string
                example: |
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> .
                  <http://www.semanticweb.org/kiko/fam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> .
            text/rdf+n3:
              schema:
                type: string
                example: |
                  @prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .
                  @prefix owl: <http://www.w3.org/2002/07/owl#> .
                  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                  @prefix xml: <http://www.w3.org/XML/1998/namespace> .
                  @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
                  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

                  :filho a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pai a owl:Class;
                    rdfs:subClassOf :pessoa .

                  :pessoa a owl:Class .

                  :antonio a owl:NamedIndividual;
                    :pai_de :carlos .

                  :carlos a owl:NamedIndividual;
                    :filho_de :antonio .

                  <http://www.semanticweb.org/kiko/fam> a owl:Ontology .

                  :filho_de a owl:ObjectProperty;
                    owl:inverseOf :pai_de .

                  :pai_de a owl:ObjectProperty;
                    rdfs:domain :pai;
                    rdfs:range :filho .
            text/x-nquads:
              schema:
                type: string
                example: |
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio> .
                  <http://www.semanticweb.org/kiko/fam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai> .
                  <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho> .

            application/ld+json:
              schema:
                type: string
                example: |
                  [
                      {
                          "@id": "http://www.semanticweb.org/kiko/fam",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#Ontology"
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#NamedIndividual"
                          ],
                          "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#NamedIndividual"
                          ],
                          "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#Class"
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#subClassOf": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#ObjectProperty"
                          ],
                          "http://www.w3.org/2002/07/owl#inverseOf": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#Class"
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#subClassOf": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#ObjectProperty"
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#domain": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai"
                              }
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#range": [
                              {
                                  "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho"
                              }
                          ]
                      },
                      {
                          "@id": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa",
                          "@type": [
                              "http://www.w3.org/2002/07/owl#Class"
                          ]
                      }
                  ]
            application/rdf+json:
              schema:
                type: string
                example: |
                  {
                      "http://www.semanticweb.org/kiko/fam": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#Ontology",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio": {
                          "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#NamedIndividual",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos": {
                          "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#NamedIndividual",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#Class",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#subClassOf": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#ObjectProperty",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/2002/07/owl#inverseOf": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#Class",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#subClassOf": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#ObjectProperty",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#domain": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai",
                                  "type": "uri"
                              }
                          ],
                          "http://www.w3.org/2000/01/rdf-schema#range": [
                              {
                                  "value": "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho",
                                  "type": "uri"
                              }
                          ]
                      },
                      "http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa": {
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
                              {
                                  "value": "http://www.w3.org/2002/07/owl#Class",
                                  "type": "uri"
                              }
                          ]
                      }
                  }
            application/trix:
              schema:
                type: string
                example: |
                  <?xml version='1.0' encoding='UTF-8'?>
                  <TriX xmlns='http://www.w3.org/2004/03/trix/trix-1/'>
                    <graph>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#Class</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>
                        <uri>http://www.w3.org/2000/01/rdf-schema#subClassOf</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#Class</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>
                        <uri>http://www.w3.org/2000/01/rdf-schema#subClassOf</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pessoa</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#Class</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#NamedIndividual</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#NamedIndividual</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#carlos</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#antonio</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/fam</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#Ontology</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#ObjectProperty</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho_de</uri>
                        <uri>http://www.w3.org/2002/07/owl#inverseOf</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>
                        <uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</uri>
                        <uri>http://www.w3.org/2002/07/owl#ObjectProperty</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>
                        <uri>http://www.w3.org/2000/01/rdf-schema#domain</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai</uri>
                      </triple>
                      <triple>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#pai_de</uri>
                        <uri>http://www.w3.org/2000/01/rdf-schema#range</uri>
                        <uri>http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#filho</uri>
                      </triple>
                    </graph>
                  </TriX>
            application/x-trig:
              schema:
                type: string
                example: |
                  @prefix : <http://www.semanticweb.org/kiko/ontologies/2019/9/untitled-ontology-23#> .
                  @prefix owl: <http://www.w3.org/2002/07/owl#> .
                  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                  @prefix xml: <http://www.w3.org/XML/1998/namespace> .
                  @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
                  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

                  {
                    :filho a owl:Class;
                      rdfs:subClassOf :pessoa .

                    :pai a owl:Class;
                      rdfs:subClassOf :pessoa .

                    :pessoa a owl:Class .

                    :antonio a owl:NamedIndividual;
                      :pai_de :carlos .

                    :carlos a owl:NamedIndividual;
                      :filho_de :antonio .

                    <http://www.semanticweb.org/kiko/fam> a owl:Ontology .

                    :filho_de a owl:ObjectProperty;
                      owl:inverseOf :pai_de .

                    :pai_de a owl:ObjectProperty;
                      rdfs:domain :pai;
                      rdfs:range :filho .
                  }
            application/x-binary-rdf:
              schema:
                description: "Binary value"
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/explicit":
    get:
      tags:
      - RDF4J
      summary: Explicit triples count
      description: Returns the number of explicit triples in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/total":
    get:
      tags:
      - RDF4J
      deprecated: true
      summary: Total triples count
      description: Returns the total (explicit+implicit) number of triples in the repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/triples":
    get:
      tags:
      - RDF4J
      summary: Explicit and Implicit triples count and Expansion ratio
      description: Returns the number of explicit and implicit triples in the repository and the expansion ratio.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/namespaces":
    get:
      tags:
      - RDF4J
      summary: Repository Namespaces
      description: Returns the repository namespaces.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
          # example: "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/namespaces/{prefix}":
    get:
      tags:
      - RDF4J
      summary: Returns the namespace for a prefix in a repository
      # description: Returns the namespace for a prefix in a repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      - in: path
        required: true
        name: prefix
        description: Target Prefix (can be a space to simulate noname prefix)
        schema:
          type: string
          # default: ""
      responses:
        '200':
          description: Request success
        '400':
          description: Bad request
  "/rdf4j/repository/{repository}/contexts":
    get:
      tags:
      - RDF4J
      summary: Repository contexts
      description: Returns the repository contexts.
      parameters:
      - in: path
        required: true
        name: repository
        description: Target Repository
        schema:
          type: string
      responses:
        '200':
          description: Request success
        '400':
          description: Bad request
  "/rdf4j/query/{repository}":
    get:
      tags:
      - RDF4J
      summary: Query a Repository
      description: |
        Run a SPARQL query in a Repository.
        Because it is a GET request the query size is limited. Use the POST if needed.
      parameters:
      - in: path
        required: true
        name: repository
        description: Repository to be queried
        schema:
          type: string
      - in: query
        required: true
        name: query
        description: SPARQL query to run
        schema:
          type: string
          example: "select * where { ?s ?p ?o } limit 20"
      - in: query
        name: infer
        description: Returns infered triples? (default true)
        schema:
          type: boolean
          example: true
          default: true
      responses:
        '200':
          description: Query successful
          content:
            application/json:
              schema:
                type: object
            text/csv:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            application/x-binary-rdf-results-table:
              schema:
                description: "Binary value"
                # type: binary
        '400':
          description: Bad request
    post:
      tags:
      - RDF4J
      summary: Query a Repository
      description: |
        Run a SPARQL query in a Repository.
      parameters:
      - in: path
        required: true
        name: repository
        description: Repository to be queried
        schema:
          type: string
      requestBody:
        # description: Login credentials.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: SPARQL query to run
                infer:
                  type: string
                  description: Returns infered triples? (default true)
              required:
                - query
              example:
                query: "select * where { ?s ?p ?o } limit 20"
                infer: "true"
      responses:
        '200':
          description: Query successful
          content:
            application/json:
              schema:
                type: object
            text/csv:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            application/x-binary-rdf-results-table:
              schema:
                description: "Binary value"
                # type: binary
        '400':
          description: Bad request

  # MONGO SECTION
  "/mongo":
    get:
      tags:
      - Mongo
      deprecated: true
      summary: TODO
      description: TODO
      responses:
        default:
          description: TODO
  "/users":
    get:
      tags:
      - Mongo
      summary: Users list
      description: Returns a JSON list with all the users.
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Unexpected error
    post:
      tags:
      - Mongo
      summary: Create a new user element
      # description: Create a new user element
      requestBody:
        description: User account details.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: User created with success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal error. Likely duplicate key (email already exists)
        # default:
        #   description: TODO
  "/users/{email}":
    get:
      tags:
      - Mongo
      summary: User information by email
      description: Given a User email, returns the User information
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      responses:
        '200':
          description: Operation successful. (or user doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        # default:
        #   description: TODO
    delete:
      tags:
      - Mongo
      summary: Delete user by email
      # description: Delete user account with the specified email.
      parameters:
      - in: path
        required: true
        name: email
        description: Email from the User to delete
        schema:
          type: string
      responses:
        '200':
          description: User deleted with success. (or it doesnt exist and returns empty object)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        # default:
        #   description: Email doesn't exist
  "/users/{email}/password":
    put:
      tags:
      - Mongo
      deprecated: true
      summary: TODO
      description: TODO
      parameters:
      - in: path
        required: true
        name: email
        description: Account email
        schema:
          type: string
      responses:
        default:
          description: TODO
  "/queries":
    get:
      tags:
      - Mongo
      summary: Saved Queries list
      description: Returns a JSON list with all the saved queries.
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedQuery'
        default:
          description: Unexpected error
    post:
      tags:
      - Mongo
      summary: Create a new Saved Query
      # description: Create a new Saved Query
      requestBody:
        description: Saved Query details.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedQuery'
              # properties:
              #   name:
              #     type: string
              #   query:
              #     type: string
              #   user_email:
              #     type: string
              #   repoID:
              #     type: string
              # required:
              #   - name
              #   - query
              #   - user_email
      responses:
        '200':
          description: Create success
        '400':
          description: Bad request
        default:
          description: TODO (already exists a query with same name from same user)
  "/queries/user/{email}":
    get:
      tags:
      - Mongo
      summary: Get saved queries from a user
      description: Given a User email, returns its saved queries
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      responses:
        '200':
          description: Operation successful. (or user doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: TODO
  "/queries/user/{email}/global":
    get:
      tags:
      - Mongo
      summary: Get global saved queries from a user
      description: Given a User email, returns its global (not associated to any specific repository) saved queries
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      responses:
        '200':
          description: Operation successful. (or user doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: TODO
  "/queries/user/{email}/{repository}":
    get:
      tags:
      - Mongo
      summary: Get saved queries from a user and repository
      description: Given a User email and Repository ID, returns its saved queries
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      - in: path
        required: true
        name: repository
        description: Repository ID
        schema:
          type: string
      responses:
        '200':
          description: Operation successful. (or user doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: TODO
  # "/queries/{email}/{name}":
  "/queries/{name}":
    get:
      tags:
      - Mongo
      summary: Get a saved query by name.
      description: Given a Query Name, returns it.
      parameters:
      # - in: path
      #   required: true
      #   name: email
      #   description: User email
      #   schema:
      #     type: string
      - in: path
        required: true
        name: name
        description: Query name
        schema:
          type: string
      responses:
        '200':
          description: Operation successful. (or user doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: TODO
  "/queries/{email}/{name}":
    put:
      tags:
      - Mongo
      summary: Change a Saved Query query value
      # description: Given a Query Name, returns it.
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      - in: path
        required: true
        name: name
        description: Query name
        schema:
          type: string
      requestBody:
        description: Saved Query details.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              # $ref: '#/components/schemas/SavedQuery'
              type: object
              properties:
                query:
                  type: string
              required:
                - query
      responses:
        '200':
          description: Operation successful. (or user/name doesnt exist and returns empty object...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: TODO
    delete:
      tags:
      - Mongo
      summary: Delete Saved Query
      # description: Delete Saved Query by user email and saved query name.
      parameters:
      - in: path
        required: true
        name: email
        description: User email
        schema:
          type: string
      - in: path
        required: true
        name: name
        description: Query name
        schema:
          type: string
      responses:
        '200':
          description: Saved Query deleted with success. (or user/name doesnt exist and returns empty object)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
        '400':
          description: Bad request
        # default:
        #   description: Email doesn't exist


components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    User:
      required:
      - _id
      - name
      - email
      - password
      - __v
      properties:
        _id:
          type: string
          uniqueItems: true
          example: "5da988f5204a53011f3b3e49"
        name:
          type: string
          example: "test"
        email:
          type: string
          uniqueItems: true
          example: "test@email"
        password:
          type: string
          example: "$2b$10$7SVjTqc7BGf8/P83WN5CPOYlBcKzEIdfSbhEEl3vbpARswHccGtke"
        __v:
          type: number
          example: 0
    SavedQuery:
      required:
      - _id
      - user_email
      - name
      - query
      - __v
      properties:
        _id:
          type: string
          uniqueItems: true
          example: "5da988f5204a53011f3b3e49"
        user_email:
          type: string
          uniqueItems: true
          example: "test@email"
        name:
          type: string
          uniqueItems: true
          example: "QueryExample"
        query:
          type: string
          example: "select * where { ?s ?p ?o } limit 100"
        repoID:
          type: string
          description: "Contains the repoID of the repository associated with this query. Doesnt exist if the query is global (not associated to a specific repository)"
          example: "repo"
    Repository:
      required:
      - id
      - name
      - owner_email
      properties:
        id:
          type: string
          uniqueItems: true
        name:
          type: string
        owner_email:
          type: string
